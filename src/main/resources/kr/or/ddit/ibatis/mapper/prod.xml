<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="prod">
	<typeAlias alias="pVO" type="kr.or.ddit.vo.ProdVO" />
	<typeAlias alias="lVO" type="kr.or.ddit.vo.LprodVO" />
	<typeAlias alias="bVO" type="kr.or.ddit.vo.BuyerVO" />

	<sql id="selectAll">
		select *
		from prod p, buyer b
		where p.prod_buyer = b.buyer_id 
		and prod_delete = 'n'
	</sql>

	<sql id="searchCondition">
			<dynamic prepend="and">
				<isNotEmpty property="search_keyword" open="(" close=")">
					<isEqual property="search_keycode" compareValue="ALL">
						prod_lgu like '%'||#search_keyword#||'%'
						or prod_name like '%'||#search_keyword#||'%'
						or buyer_name like '%'||#search_keyword#||'%'
					</isEqual>
					<isEqual property="search_keycode" compareValue="PRODLGU">
						prod_lgu like '%'||#search_keyword#||'%'
					</isEqual>
					<isEqual property="search_keycode" compareValue="PRODNAME">
						prod_name like '%'||#search_keyword#||'%'
					</isEqual>
					<isEqual property="search_keycode" compareValue="BUYERNAME">
						buyer_name like '%'||#search_keyword#||'%'
					</isEqual>
					
				</isNotEmpty>		
			</dynamic>
		</sql>

	<select id="prodInfo" parameterClass="map" resultClass="pVO">
		<include refid="selectAll" />
		and prod_id = #prod_id#
	</select>

	<select id="prodList" resultClass="pVO" parameterClass="map">
			select b.*
				from (
					select rownum r, a.*
					from(
						<include refid="selectAll" />
						<include refid="searchCondition" />
						order by prod_id desc)a
						)b
					<![CDATA[
					where b.r <= #startCount#
					  and b.r >= #endCount#
					]]>
			order by b.r desc
	</select>

	<update id="deleteProdInfo" parameterClass="map">
		update prod
		set
		prod_delete = 'y'
		where prod_id = #prod_id#
	</update>

	<update id="updateProdInfo" parameterClass="pVO">
		UPDATE PROD
		SET
		PROD_COST = #prod_cost#
		,PROD_PRICE = #prod_price#
		,PROD_SALE = #prod_sale#
		,PROD_OUTLINE = #prod_outline#
		,PROD_DETAIL = #prod_detail#
		,PROD_QTYIN = #prod_qtyin#
		,PROD_TOTALSTOCK = #prod_totalstock#
		,PROD_PROPERSTOCK = #prod_properstock#
		,PROD_INSDATE = #prod_insdate#
		WHERE PROD_ID = #prod_id#
	</update>

	<insert id="insertProdInfo" parameterClass="pVO">
		INSERT INTO PROD
		(
		PROD_ID,PROD_NAME,PROD_LGU,PROD_BUYER,PROD_COST,
		PROD_PRICE,PROD_SALE,PROD_OUTLINE,PROD_DETAIL,
		PROD_QTYIN,PROD_TOTALSTOCK,PROD_PROPERSTOCK,
		PROD_INSDATE
		)

		VALUES
		(
		#prod_id#,#prod_name#,#prod_lgu#,#prod_buyer#,
		#prod_cost#,#prod_price#,#prod_sale#,#prod_outline#,
		#prod_detail#,#prod_qtyin#,#prod_totalstock#,#prod_properstock#,
		#prod_insdate#
		)

	</insert>

	<select id="lprodList" parameterClass="map" resultClass="lVO">
		select
		lprod_nm
		from lprod
	</select>

	<select id="totalCount" parameterClass="map" resultClass="string">
		select distinct count(c.prod_id)
		from
			(select *
			from prod, buyer
			where prod.prod_buyer=buyer.buyer_id) c
		where prod_delete = 'n'
		<include refid="searchCondition"/>
	</select>

</sqlMap>