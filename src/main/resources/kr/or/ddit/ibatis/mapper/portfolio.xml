<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="portfolio">
		<typeAlias alias="portfolioVO" type="kr.or.ddit.vo.PortFolioVO" />
		<typeAlias alias="ReviewVO" type="kr.or.ddit.vo.PortFolioReviewVO" />
		
	<sql id="selectAll">
	SELECT
	PORTFOLIO_NO,
	MEM_ID,
	PORTFOLIO_CATEGORIES,
	PORTFOLIO_TAGS,
	PORTFOLIO_TECHNOLOGIES,
	PORTFOLIO_NAME,
	TO_CHAR(PORTFOLIO_REGDATE, 'MM/DD/YYYY') PORTFOLIO_REGDATE,
	PORTFOLIO_URL,
	PORTFOLIO_DESCRIPTION,
	TO_CHAR(PORTFOLIO_STARTDATE, 'MM/DD/YYYY') PORTFOLIO_STARTDATE,
	TO_CHAR(PORTFOLIO_ENDDATE, 'MM/DD/YYYY') PORTFOLIO_ENDDATE,
	PORTFOLIO_PARTICIPATIONRATE,
	PORTFOLIO_THUMBNAILIMG FROM PORTFOLIO
	</sql>
	
<!-- <select id="selectPortFolioList" parameterClass="map" resultClass="java.util.HashMap">
	<include refid="selectAll"/>
	WHERE PORT PORTFOLIO_TECHNOLOGIES =#portfolio_technologies#
</select> -->

<select id="selectPortFolioList"  resultClass="java.util.HashMap">
	<!-- <include refid="selectAll" /> -->
select
       PORTFOLIO_NO,
       PORTFOLIO.MEM_ID MEM_ID,
       PORTFOLIO.PORTFOLIO_CATEGORIES PORTFOLIO_CATEGORIES,
       PORTFOLIO.PORTFOLIO_TAGS PORTFOLIO_TAGS,
       PORTFOLIO.PORTFOLIO_TECHNOLOGIES PORTFOLIO_TECHNOLOGIES,
       PORTFOLIO.PORTFOLIO_NAME PORTFOLIO_NAME,
       TO_CHAR(PORTFOLIO.PORTFOLIO_REGDATE, 'MM/dd/YYYY') PORTFOLIO_REGDATE,
       PORTFOLIO.PORTFOLIO_URL,
       TO_CHAR(PORTFOLIO.PORTFOLIO_STARTDATE, 'MM/dd/YYYY') PORTFOLIO_STARTDATE,
       TO_CHAR(PORTFOLIO.PORTFOLIO_ENDDATE, 'MM/dd/YYYY') PORTFOLIO_ENDDATE,
       PORTFOLIO.PORTFOLIO_PARTICIPATIONRATE PORTFOLIO_PARTICIPATIONRATE,
       PORTFOLIO.PORTFOLIO_THUMBNAILIMG PORTFOLIO_THUMBNAILIMG,
       PROFILE_SAVENAME
from PORTFOLIO, PROFILE_FILE
where PORTFOLIO.MEM_ID = PROFILE_FILE.MEM_ID
order by PORTFOLIO.PORTFOLIO_NO desc
	
	
	
</select>

<!-- 특정 포트폴리오 번호에 따른 각각의 차트 뛰우기 -->
<select id="mainScoreChart" parameterClass="map" resultClass="java.util.HashMap">
		SELECT AVG(NVL(portfolio_design, 0)) portfolio_design,
		       AVG(NVL(portfolio_useability, 0)) portfolio_useability,
		       AVG(NVL(portfolio_creativity, 0)) portfolio_creativity,
		       AVG(NVL(portfolio_contentscore, 0)) portfolio_contentscore,
		       AVG(NVL(portfolio_develop, 0)) portfolio_develop
				FROM PORTFOLIO_BOARD
				WHERE PORTFOLIO_NO= #PORTFOLIO_NO#
</select>
	
<!--  특정 포트폴리오 번호에 따른 차트 종합 평균 점수 구하기 -->
<select id="totalAVG" parameterClass="map" resultClass="java.util.HashMap">
	SELECT PORTFOLIO.PORTFOLIO_NO PORTFOLIO_NO  , (AVG(NVL(PORTFOLIO_DESIGN, 0)) +
	       AVG(NVL(PORTFOLIO_USEABILITY, 0))+
	       AVG(NVL(PORTFOLIO_CREATIVITY, 0))+
	       AVG(NVL(PORTFOLIO_CONTENTSCORE, 0))+
	       AVG(NVL(PORTFOLIO_DEVELOP, 0))) / 5 TOTALAVG,
	               AVG(NVL(portfolio_design, 0)) portfolio_design,
			       AVG(NVL(portfolio_useability, 0)) portfolio_useability,
			       AVG(NVL(portfolio_creativity, 0)) portfolio_creativity,
			       AVG(NVL(portfolio_contentscore, 0)) portfolio_contentscore,
			       AVG(NVL(portfolio_develop, 0)) portfolio_develop
	FROM PORTFOLIO_BOARD ,PORTFOLIO
	where PORTFOLIO.PORTFOLIO_NO = PORTFOLIO_BOARD.PORTFOLIO_NO and PORTFOLIO.PORTFOLIO_NO= #PORTFOLIO_NO#
	group by PORTFOLIO.PORTFOLIO_NO
</select>

<!--전체 베스트 평균의 포트폴리오 뽑기 -->
<select id="MaxPortfolioNo" resultClass="java.util.HashMap">

select b.PORTFOLIO_NO PORTFOLIO_NO, b.TOTALAVG TOTALAVG
from(
select ROWNUM r,a.*
    from
(SELECT PORTFOLIO.PORTFOLIO_NO PORTFOLIO_NO  , (AVG(NVL(PORTFOLIO_DESIGN, 0)) +
       AVG(NVL(PORTFOLIO_USEABILITY, 0))+
       AVG(NVL(PORTFOLIO_CREATIVITY, 0))+
       AVG(NVL(PORTFOLIO_CONTENTSCORE, 0))+
       AVG(NVL(PORTFOLIO_DEVELOP, 0))) / 5 TOTALAVG
FROM PORTFOLIO_BOARD ,PORTFOLIO
where PORTFOLIO.PORTFOLIO_NO = PORTFOLIO_BOARD.PORTFOLIO_NO
group by PORTFOLIO.PORTFOLIO_NO
order by TOTALAVG desc ) a) b
where b.r = 1
</select>

<select id="portfolioInfo" parameterClass="map" resultClass="java.util.HashMap">
	   select
       PORTFOLIO_NO,
       PORTFOLIO.MEM_ID MEM_ID,
       PORTFOLIO.PORTFOLIO_CATEGORIES PORTFOLIO_CATEGORIES,
       PORTFOLIO.PORTFOLIO_TAGS PORTFOLIO_TAGS,
       PORTFOLIO.PORTFOLIO_TECHNOLOGIES PORTFOLIO_TECHNOLOGIES,
       PORTFOLIO.PORTFOLIO_NAME PORTFOLIO_NAME,
       TO_CHAR(PORTFOLIO.PORTFOLIO_REGDATE, 'MM/dd/YYYY') PORTFOLIO_REGDATE,
       PORTFOLIO.PORTFOLIO_URL,
       TO_CHAR(PORTFOLIO.PORTFOLIO_STARTDATE, 'MM/dd/YYYY') PORTFOLIO_STARTDATE,
       TO_CHAR(PORTFOLIO.PORTFOLIO_ENDDATE, 'MM/dd/YYYY') PORTFOLIO_ENDDATE,
       PORTFOLIO.PORTFOLIO_PARTICIPATIONRATE PORTFOLIO_PARTICIPATIONRATE,
       PORTFOLIO.PORTFOLIO_THUMBNAILIMG PORTFOLIO_THUMBNAILIMG,
       PROFILE_SAVENAME,
       PORTFOLIO.PORTFOLIO_IMGS PORTFOLIO_IMGS,
       PORTFOLIO_LIKE,
	   PORTFOLIO_DESCRIPTION
from PORTFOLIO, PROFILE_FILE
where PORTFOLIO.MEM_ID = PROFILE_FILE.MEM_ID
AND PORTFOLIO_NO = #PORTFOLIO_NO#
</select>

	<update id="updatePortFolioLike" parameterClass="map">
		UPDATE PORTFOLIO SET PORTFOLIO_LIKE = PORTFOLIO_LIKE +1
		WHERE PORTFOLIO_NO = #portfolio_no#
	</update>
	
	<insert id="InsertPortflio" parameterClass="portfolioVO">
		<selectKey keyProperty="portfolio_no" resultClass="string">
			SELECT
			PORTFOLIO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO PORTFOLIO
			( portfolio_no,
			mem_id,
			portfolio_categories,
			portfolio_tags,
			portfolio_technologies,
			portfolio_name,
			portfolio_regdate,
			portfolio_url,
			portfolio_startdate,
			portfolio_enddate,
			portfolio_participationrate,
			portfolio_thumbnailimg,
			portfolio_imgs,
			portfolio_description)
			 VALUES 
			 ( #portfolio_no#,
				#mem_id#,
				#portfolio_categories#,
				#portfolio_tags#,
				#portfolio_technologies#,
				#portfolio_name#,
				sysdate,
				#portfolio_url#,
				to_date(#portfolio_startdate#, 'MM/dd/YYYY'),
				to_date(#portfolio_enddate#, 'MM/dd/YYYY'),
				#portfolio_participationrate#,
				#portfolio_thumbnailimg#,
				#portfolio_imgs#,
				#portfolio_description#)
	</insert>
	
	<update id="updatePortfolio" parameterClass="portfolioVO">
		update PORTFOLIO SET
		PORTFOLIO_TECHNOLOGIES = #portfolio_technologies#,
		PORTFOLIO_NAME = #portfolio_name#,
		PORTFOLIO_URL = #portfolio_url#,
		PORTFOLIO_STARTDATE = to_date(#portfolio_startdate#, 'MM/dd/YYYY'),
		PORTFOLIO_ENDDATE = to_date(#portfolio_enddate#, 'MM/dd/YYYY'),
		PORTFOLIO_PARTICIPATIONRATE = #portfolio_participationrate#,
		PORTFOLIO_THUMBNAILIMG = #portfolio_thumbnailimg#,
		PORTFOLIO_IMGS = #portfolio_imgs#,
		PORTFOLIO_DESCRIPTION = #portfolio_description#
		WHERE 
		PORTFOLIO_NO = #portfolio_no# AND 
		MEM_ID = #mem_id#
		
	</update>
	
	<delete id="deleteportfolio" parameterClass="map">
		DELETE PORTFOLIO WHERE MEM_ID = #mem_id# AND portfolio_no = #portfolio_no#
	</delete>
	
	
	<select id="selectPortfolioReview" resultClass="java.util.HashMap" parameterClass="map">
SELECT PORTFOLIO_SEQ,
PORTFOLIO_NO,
PORTFOLIO_WRITER,
PORTFOLIO_DESIGN,
PORTFOLIO_USEABILITY,
PORTFOLIO_CREATIVITY,
PORTFOLIO_CONTENTSCORE,
PORTFOLIO_DEVELOP,
PORTFOLIO_CONTENT,
TO_CHAR(PORTFOLIO_REGDATE, 'MM/dd/YYYY') PORTFOLIO_REGDATE,
PROFILE_SAVENAME,
MEM_ID ,
(AVG(NVL(PORTFOLIO_DESIGN, 0)) +
AVG(NVL(PORTFOLIO_USEABILITY, 0))+
AVG(NVL(PORTFOLIO_CREATIVITY, 0))+
AVG(NVL(PORTFOLIO_CONTENTSCORE, 0))+
AVG(NVL(PORTFOLIO_DEVELOP, 0))) / 5 TOTALAVG
	FROM PORTFOLIO_BOARD, PROFILE_FILE
	WHERE PORTFOLIO_BOARD.PORTFOLIO_WRITER = PROFILE_FILE.MEM_ID and PORTFOLIO_NO=#portfolio_no#
    GROUP BY  PORTFOLIO_SEQ,PORTFOLIO_NO,PORTFOLIO_WRITER,PORTFOLIO_DESIGN,PORTFOLIO_USEABILITY,
PORTFOLIO_CREATIVITY,PORTFOLIO_CONTENTSCORE,PORTFOLIO_DEVELOP,PORTFOLIO_CONTENT,TO_CHAR(PORTFOLIO_REGDATE, 'MM/dd/YYYY'),PROFILE_SAVENAME,MEM_ID
order by PORTFOLIO_SEQ desc
	</select>
	
	<insert id="insertPortfolioReview" parameterClass="ReviewVO">
		<selectKey keyProperty="portfolio_seq" resultClass="string">
			SELECT
			PORTFOLIO_BOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO PORTFOLIO_BOARD 
			(PORTFOLIO_SEQ,
			PORTFOLIO_NO,
			PORTFOLIO_WRITER,
			PORTFOLIO_DESIGN,
			PORTFOLIO_USEABILITY,
			PORTFOLIO_CREATIVITY,
			PORTFOLIO_CONTENTSCORE,
			PORTFOLIO_DEVELOP,
			PORTFOLIO_CONTENT,
			PORTFOLIO_REGDATE) VALUES 
				(#portfolio_seq#,
				#portfolio_no#,
				#portfolio_writer#,
				#portfolio_design#,
				#portfolio_useability#,
				#portfolio_creativity#,
				#portfolio_contentscore#,
				#portfolio_develop#,
				#portfolio_content#,
				SYSDATE)
	</insert>
	
	<select id="portfolioReviewInfo" parameterClass="map" resultClass="java.util.HashMap">
		SELECT 
		PORTFOLIO_SEQ,
	    PORTFOLIO_NO,
	    PORTFOLIO_WRITER,
	    PORTFOLIO_DESIGN,
	    PORTFOLIO_USEABILITY,
	    PORTFOLIO_CREATIVITY,
	    PORTFOLIO_CONTENTSCORE,
	    PORTFOLIO_DEVELOP,
	    PORTFOLIO_CONTENT,
    	TO_CHAR(PORTFOLIO_REGDATE, 'MM/dd/YYYY') PORTFOLIO_REGDATE
		FROM PORTFOLIO_BOARD WHERE  PORTFOLIO_SEQ= #portfolio_seq#
	</select>
	
	<update id="updatePortfolioReview" parameterClass="ReviewVO">
		UPDATE PORTFOLIO_BOARD SET
			PORTFOLIO_WRITER= #portfolio_writer#,
			PORTFOLIO_DESIGN= #portfolio_design#,
			PORTFOLIO_USEABILITY= #portfolio_useability#,
			PORTFOLIO_CREATIVITY= #portfolio_creativity#,
			PORTFOLIO_CONTENTSCORE= #portfolio_contentscore#,
			PORTFOLIO_DEVELOP= #portfolio_develop#,
			PORTFOLIO_CONTENT= #portfolio_content#
			 WHERE PORTFOLIO_SEQ=#portfolio_seq#
			
	</update>
	
	<delete id="portfolioReviewDelete" parameterClass="map">
		DELETE PORTFOLIO_BOARD
		WHERE PORTFOLIO_SEQ= #portfolio_seq#
	</delete>
</sqlMap>



